Task Assignment: Debug and Fix CoA Data Seeding & Display

Context:
Following the recent CoA schema update (renaming code to accountCode, adding new fields), you reported that Chart of Accounts data is not displaying for clients in the UI. This likely indicates that the data seeding process (for both new and potentially existing clients) was not updated to reflect the schema changes.

Goal:
Identify and fix the issues in the CoA template and seeding logic to ensure both newly created and existing clients have the standard Chart of Accounts populated correctly according to the updated schema, and verify that the data then displays correctly in the UI.

Instructions:

Part 1: Analyze and Update Seeding Logic & Template

Action: Review CoA Template (server/coaTemplate.ts)

Examine the standardCoA array (or similar structure) within server/coaTemplate.ts.
Verify/Modify: Ensure all account definitions use the field name accountCode instead of code.
Verify/Modify: Ensure all account definitions include the new fields (fsliBucket, internalReportingBucket, item), likely with null or appropriate default values.
Report the specific changes made to the template.
Action: Review Automatic Seeding Logic (New Clients)

Identify where the standard CoA is automatically seeded when a new client is created. This is likely in server/storage.ts (within a function like createClient or seedInitialDataForClient) or potentially triggered by the backend route handling the final step of the setup flow (SetupStepper.tsx).
Verify/Modify: Ensure this logic correctly uses the updated standardCoA template (from Step 1) and correctly maps/inserts fields like accountCode, fsliBucket, etc., into the accounts table. Add detailed console.log statements here to trace the input data and the insertion process.
Report the file and function(s) reviewed/modified and the specific changes made.
Action: Review Manual Seeding Script (scripts/seed-existing-clients-coa.ts)

Examine the seedCoAForClient function (or similar) within scripts/seed-existing-clients-coa.ts.
Verify/Modify: Ensure this script also uses the updated standardCoA template (from Step 1) and correctly maps/inserts fields like accountCode, fsliBucket, etc.
Add Safety Checks/Logging: Enhance the script:
Add clear logging (console.log) at the start, end, and for each client processed (success or failure).
CRITICAL: Modify the findClientsWithoutCoA (or main logic) to only attempt seeding for clients who currently have ZERO associated records in the accounts table. This prevents accidentally wiping out or duplicating data for clients who might already have some accounts. Log which clients are identified for seeding.
Report the specific changes made to the script.
Part 2: Re-Seed Data for Existing Clients

Action: Execute Manual Seeding Script (Carefully!)
Navigate to the project root in the terminal.
Run the updated script using the runner: ./scripts/seed-existing-coa.sh
Monitor Output: Carefully observe the console logs generated by the script. Note any errors and which clients were successfully seeded.
Report success or failure of the script execution, and include the log output, especially any error messages.
Part 3: Verify Seeding and UI Display

Action: Verify Seeding for New Client via UI

Restart the application (npm run dev).
Log in and go through the full "Add Client" UI flow (SetupStepper.tsx). Create a completely new test client.
After completion, navigate directly to the Chart of Accounts page for this new client.
Verify: Does the standard CoA data now appear correctly for the new client?
Action: Verify Data Display for Existing Client via UI

Navigate to the Chart of Accounts page for an existing client (e.g., Client ID 1, assuming the script in Step 4 processed it).
Verify: Does the standard CoA data now appear correctly for this existing client?
Verification:

Confirm changes were made to coaTemplate.ts, the automatic seeding logic, and seed-existing-clients-coa.ts to use accountCode and the new fields.
Confirm the manual seeding script ran and reported success (or reported specific errors).
Confirm that CoA data is now visible in the UI for both newly created clients and existing, re-seeded clients.
Reporting:

Detail the specific code changes made in each file reviewed (template, storage/backend logic, seeding script).
Provide the console output from running the manual seeding script (seed-existing-coa.sh).
Explicitly confirm PASS/FAIL for Step 5 (New Client UI Verification).
Explicitly confirm PASS/FAIL for Step 6 (Existing Client UI Verification).
If data still doesn't appear, state that clearly so we can investigate the API and frontend components next.