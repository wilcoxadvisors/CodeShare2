Agent Instructions: Fix Final Save, Industry, and Back Navigation Bugs
CRITICAL ISSUES: User confirms after Checkpoint b1f302ef:

Final client/entity data is NOT saved to DB (Dashboard doesn't update).
Industry display is always "Other" in Steps 2 & 3.
Entity name is lost when navigating Back from Step 3 to Step 2.
Goal: Fix these three critical bugs.

Phase 1: Fix Database Save & Dashboard Update (Bug 1 - Highest Priority)

Focus: SetupStepper.tsx -> handleCompleteSetup function and the API calls within it.
Action: Rigorous API Call Debugging:
Add detailed console.log statements immediately before the Workspace('/api/admin/clients', ...) call, showing the exact clientData payload being sent.
Add logging immediately after the client Workspace call, showing the response.status and the parsed savedClient JSON. Check if savedClient.id exists.
Add logging immediately before the setupEntities.map(...) loop starts, showing the setupEntities array and the savedClient.id.
Inside the map function, log the entityPayload being constructed for each entity Workspace call.
Add logging after Promise.all(entitySavePromises), showing the results or catching any errors from individual entity saves.
Add logging before calling localStorage.removeItem.
Add logging before calling props.onComplete().
Action: Verify Backend Route & Logic:
Briefly check server/adminRoutes.ts and server/storage.ts. Do the POST /api/admin/clients and POST /api/admin/entities routes exist? Do they accept the payload structure being sent (check the logs from step 2)? Do they correctly call the database save functions?
Action: Re-Verify Dashboard Refresh:
In Dashboard.tsx, confirm the queryKey in queryClient.invalidateQueries({ queryKey: ['clients'] }) exactly matches the query key used by the dashboard's client list/stats useQuery. Add logs in the onComplete handler there too.
Test & Report:
Complete the setup flow.
Check Network Tab: Are the POST requests made? What are their statuses and responses?
Check Console Logs: Follow the "DEBUG" logs. Do the API calls succeed? Is props.onComplete called? Does invalidateQueries run?
Check Dashboard: Does the new client appear?
Report: State clearly if data is saved and the dashboard updates. Provide logs/network details if it fails.
Phase 2: Fix Industry Display/Persistence (Bug 2) (AFTER Phase 1 Verified)

Focus: EntityManagementCard.tsx (form onSubmit, getEntityIndustryLabel), SetupSummaryCard.tsx.
Action: Debug Data Saving & Display:
In EntityManagementCard onSubmit: Log data.industry before the createEntityMutation or updateEntityMutation is called. Is the correct value ("tech", "retail", "other", etc.) present?
In the API call payload construction (inside the mutation): Log the industry value being sent to the backend. Is it correct?
In the getEntityIndustryLabel function: Log the input industryValue and the returned label. Is the lookup logic correct for all values, especially "other"?
Verify the Step 2 table and Step 3 summary use getEntityIndustryLabel(entity.industry) correctly.
Test & Report: Add/edit entities with different industries. Check logs. Check UI display in Steps 2 & 3. Confirm correct industry labels appear.
Phase 3: Fix State Loss on Back Navigation (Bug 3) (AFTER Phase 1 & 2 Verified)

Focus: SetupStepper.tsx (handleBack, state variables, localStorage usage).
Hypothesis: The setupEntities state or localStorage might be getting incorrectly modified or cleared during back navigation.
Action:
Add logs in handleBack showing activeStep before and after setActiveStep.
Add logs in EntityManagementCard (Step 2) near the top/useEffect to show props.entities when it renders (especially after navigating back from Step 3).
Ensure localStorage.removeItem('setupEntities') is ONLY called in handleCompleteSetup or onCancel, NOT in handleBack or anywhere else during intermediate navigation.
Test & Report: Go to Step 3, click "Back". Check logs. Does Step 2 re-render with the correct props.entities? Do entity names remain? Confirm the fix.