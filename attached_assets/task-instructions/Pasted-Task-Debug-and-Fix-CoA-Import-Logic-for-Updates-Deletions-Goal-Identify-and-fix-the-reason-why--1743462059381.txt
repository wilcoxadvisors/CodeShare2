Task: Debug and Fix CoA Import Logic for Updates & Deletions

Goal: Identify and fix the reason why changes (updates to existing accounts) and deletions (accounts present in the database but missing from the import file) are not being processed correctly by the importCoaForClient function.

Add Detailed Logging to importCoaForClient:
Action: Open server/storage.ts.
Action: Add detailed console.log statements within the importCoaForClient function, specifically around the logic that handles existing accounts:
Inside the loop processing normalizedRows:
Log when an existingAccount is found matching a row's accountNumber.
Log the comparison result: Are changes detected between the row data and the existingAccount data?
Log which accounts are being added to the accountsToUpdate array and why.
Log which accounts are being skipped for updates and why.
After processing all rows, log the final contents of accountsToUpdate.
Before executing updates: Log the specific UPDATE statement or parameters being used for each account in accountsToUpdate.
After executing updates: Log the result/success/failure for each update attempt.
Deletion/Inactivation Logic: Review/add logging for the part of the code that determines which existingAccounts are not present in the normalizedRows. Log which account IDs are identified for potential deletion or inactivation (setting isActive = false).
Before executing deletions/inactivations: Log the specific DELETE or UPDATE ... SET isActive = false statement or parameters for each targeted account ID.
After executing deletions/inactivations: Log the result/success/failure.
Prepare Targeted Test Case:
Action: Create a small test file named test/coa-import-export/test_update_delete.csv.
Content:
Include the standard headers (AccountNumber, AccountName, Type, ParentAccountNumber, etc.).
Include one row for an existing account (e.g., AccountNumber 1110 'Cash') but with a modified AccountName (e.g., 'Cash and Bank'). Use the correct ParentAccountNumber ('1100').
Include rows for a few other standard accounts but omit at least one standard account (e.g., omit the row for AccountNumber 1130 'Inventory').
Execute Targeted Manual Test:
Action: Ensure a test client exists with the standard seeded CoA (e.g., Client ID 85 or create a new one and seed it). Record the CLIENT_ID.
Action: Run the import using the manual test script with verbose logging:
Bash

node scripts/test-coa-manual.js import [CLIENT_ID] test/coa-import-export/test_update_delete.csv --verbose
Analyze Logs & Report Findings:
Action: Provide the full console output from the script execution in Step 3, including all the detailed DEBUG logs added in Step 1.
Analyze: Based only on the logs:
Was the change to account '1110' (Cash -> Cash and Bank) detected? Was it added to accountsToUpdate? Was the UPDATE statement executed successfully?
Was the absence of account '1130' (Inventory) detected? Was it identified for deletion/inactivation? Was the DELETE or UPDATE ... isActive=false statement executed successfully?
Identify where the logic failed based on the logs.
Report: Clearly state the findings from the log analysis regarding update and deletion processing.
Implement Fix:
Action: Based on the analysis, implement the necessary corrections in the importCoaForClient function in server/storage.ts.
Re-run Test & Verify:
Action: Re-run the command from Step 3: node scripts/test-coa-manual.js import [CLIENT_ID] test/coa-import-export/test_update_delete.csv --verbose.
Report: Provide the new full console output. Confirm (based on the logs) that the account update ('1110') and the account deletion/inactivation ('1130') were processed correctly this time.