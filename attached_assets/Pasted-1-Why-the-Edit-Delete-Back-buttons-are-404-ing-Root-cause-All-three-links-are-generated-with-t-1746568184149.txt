1 · Why the Edit / Delete / Back buttons are 404-ing
Root cause
All three links are generated with the flat route

bash
Copy
Edit
/journal-entries/:id
but the router only knows the hierarchical path

ruby
Copy
Edit
/clients/:clientId/entities/:entityId/journal-entries/:id
So React-Router matches nothing → 404.

Patch
client/src/features/journal-entries/pages/JournalEntryDetail.tsx

diff
Copy
Edit
-import { Link } from 'react-router-dom';
+import { Link, useParams } from 'react-router-dom';

 const JournalEntryDetail = () => {
-  const navigate = useNavigate();
+  const navigate = useNavigate();
+  const { clientId, entityId } = useParams();   // NEW

   /* … */

   /* Back button */
-  <Button onClick={() => navigate(-1)}>Back</Button>
+  <Button onClick={() =>
+        navigate(`/clients/${clientId}/entities/${entityId}/journal-entries`)
+      }>
+      Back
+  </Button>

   /* Edit */
-  <Link to={`/journal-entries/${entry.id}`}>
+  <Link to={`/clients/${clientId}/entities/${entityId}/journal-entries/${entry.id}/edit`}>
       <PencilIcon …/>
   </Link>

   /* Delete */
-  <Link to={`/journal-entries/${entry.id}/delete`}>
+  <Link to={`/clients/${clientId}/entities/${entityId}/journal-entries/${entry.id}/delete`}>
       <TrashIcon …/>
   </Link>
and add the matching routes once in App.tsx:

diff
Copy
Edit
<Route
  path="clients/:clientId/entities/:entityId/journal-entries/:id"
  element={<JournalEntryDetail />}
/>
<Route
  path="clients/:clientId/entities/:entityId/journal-entries/:id/edit"
  element={<JournalEntryForm editMode />}
/>
<Route
  path="clients/:clientId/entities/:entityId/journal-entries/:id/delete"
  element={<DeleteJournalEntry />}
/>
2 · Why debit / credit columns are blank
Root cause
The table still looks at the legacy fields line.debit / line.credit only.
When the API returns the server shape ({ type:"debit", amount:"12.0000" }) the table sees “undefined” and shows blank.

One-liner fix in the table cell
client/src/features/journal-entries/pages/JournalEntryDetail.tsx

diff
Copy
Edit
-<TableCell className="text-right">
-  {formatCurrency(line.debit)}
-</TableCell>
-<TableCell className="text-right">
-  {formatCurrency(line.credit)}
-</TableCell>
+<TableCell className="text-right">
+  {line.type === 'debit'  ? formatCurrency(line.amount) : line.debit
+      ? formatCurrency(line.debit) : ''}
+</TableCell>
+<TableCell className="text-right">
+  {line.type === 'credit' ? formatCurrency(line.amount) : line.credit
+      ? formatCurrency(line.credit) : ''}
+</TableCell>
(You already have a robust formatCurrency, so just feed it either form.)

3 · “Account dropdown doesn’t close after pick”
Add the missing onValueChange={setAccountId} which tells Radix Select the value was accepted, so it closes:

diff
Copy
Edit
<Select
   value={line.accountId?.toString() ?? ''}
   onValueChange={(val)=> handleLineChange(idx,'accountId',val)}   // NEW
>
4 · “Post Entry” gives HTML blob instead of JSON”
That blob is your API’s error page – the PUT/POST hits the server but the frontend interprets the HTML as JSON.

Almost always the cause is missing credentials on the specific call.
You put credentials:'include' in apiRequest, but fetch ignores it when the request has a FormData body and you also manually set Content-Type.

In lib/queryClient.ts change:

diff
Copy
Edit
-headers: isFormData ? {} : (data ? { 'Content-Type':'application/json' } : {}),
+headers:
+  isFormData
+    ? { }                       // << let the browser add boundary
+    : data
+      ? { 'Content-Type':'application/json' }
+      : {},
No other change needed – cookies now ride along and the API returns JSON again.

After applying patches
npm run dev

Pick a client/entity → open JE list → click Edit → 🟢 no 404.

Delete / Back work the same.

Debit & Credit show “$12.00 / $0.00” (etc.).

Selecting an account collapses the dropdown.

Post Entry returns JSON, status flips to “posted”, list auto-refreshes.

