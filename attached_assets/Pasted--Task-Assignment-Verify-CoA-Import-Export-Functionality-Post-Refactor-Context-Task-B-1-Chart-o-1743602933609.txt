
Task Assignment: Verify CoA Import/Export Functionality (Post-Refactor)

Context:
Task B.1 (Chart of Accounts core functionality & display) is complete and verified. We now need to ensure the previously implemented Import/Export features correctly handle the accountCode field name change and include the new reporting fields appropriately.

Goal:
Verify that the Chart of Accounts Import (CSV/Excel) correctly processes files expecting accountCode and that Export generates files containing accountCode and the new reporting fields (which were moved to JE Lines, so they should not be in the CoA export).

Instructions:

Part 1: Prepare/Verify Import Test Files

Action: Locate/Verify Import Test Files:
Examine the test files created previously by the agent:
test/data/coa-import/test-accounts-import-with-accountcode.csv
test/data/coa-import/test-accounts-import-with-accountcode.xlsx
Verify: Confirm these files use the header accountCode (or the exact header expected by the import function). Confirm they include rows designed to test adding new accounts, updating existing accounts (by accountCode), and omitting some accounts (to test inactivation).
If necessary: Create/modify these files to ensure adequate test coverage for add, update (single/multi-field), inactivation (by omission), and hierarchy. Ensure these test files do NOT attempt to import data into the removed reporting fields (fsliBucket, internalReportingBucket, item).
Part 2: Verify CoA Import via API/Script

Action: Ensure Application is Running & Authenticated:

Verify the application is running (npm run dev).
Ensure valid authentication cookies are available (regenerate using scripts/login.js if needed).
Action: Test CSV Import via API:

Create a new test client via API (e.g., "Import Verify Client CSV") to ensure a clean state. Record its ID.
Execute an API call (curl or an updated test script like scripts/coa-import-export-verification.js if fixed) to import the test CSV file (test-accounts-import-with-accountcode.csv) for the new test client ID.
Observe & Report: Did the import API call complete successfully? Record the response message (e.g., counts of added/updated/inactive accounts).
Verify Data: Make API calls (GET /api/clients/:clientId/accounts) to fetch the imported accounts. Verify accounts were added/updated/inactivated correctly based on the test CSV content and the accountCode field.
Action: Test Excel Import via API:

Create another new test client (e.g., "Import Verify Client Excel"). Record its ID.
Repeat Step 3 using the test Excel file (test-accounts-import-with-accountcode.xlsx) for this new client.
Part 3: Verify CoA Export via API

Action: Test CSV Export via API:

Use an existing client with a known CoA state (e.g., Client ID 1 or 100).
Execute an API call (curl or script) to export the CoA to CSV (GET /api/clients/:clientId/accounts/export?format=csv). Save the output.
Analyze Exported File:
Examine the header row. Does it correctly contain AccountCode (or the intended export header name)?
Does the data column for AccountCode contain the correct values?
Are the removed reporting fields (fsliBucket, internalReportingBucket, item) correctly absent from the export headers and data?
Report findings based on the file content.
Action: Test Excel Export via API:

Repeat Step 5 using the Excel export format (?format=excel), analyzing the resulting Excel file.
Verification:

Confirm CSV and Excel imports successfully add/update/inactivate accounts based on accountCode.
Confirm CSV and Excel exports generate files with the correct AccountCode header and data, and do not include the removed reporting fields.
Reporting:

Report PASS/FAIL for CSV Import verification (Step 3). Detail API responses and data verification results.
Report PASS/FAIL for Excel Import verification (Step 4). Detail API responses and data verification results.
Report PASS/FAIL for CSV Export verification (Step 5). Describe the exported file's headers and structure. Confirm absence of removed fields.
Report PASS/FAIL for Excel Export verification (Step 6). Describe the exported file's structure. Confirm absence of removed fields.
If all checks pass, confirm that CoA Import/Export functionality is working correctly post-refactor and schema change.