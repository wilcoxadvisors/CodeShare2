Architect's Instruction for the Replit AI Agent
Status Review: We have failed to deliver a working feature. The user has reported multiple critical bugs with both the new Accrual functionality and existing functionality that was broken during our attempts to fix it. We will now implement a comprehensive, multi-part plan to correct all known issues. This will be our final attempt on this feature.

Part 1: The Definitive Calendar Fix
Goal: Fix the date picker so that it never crashes and does not have the "off-by-one-day" timezone error.

File: client/src/features/journal-entries/components/JournalEntryForm.tsx

Action:

Locate the Button that triggers the reversal date picker. Replace its text-rendering logic with this crash-proof version:
TypeScript

{journalData.reversalDate && journalData.reversalDate.length > 0 ? (
  format(new Date(journalData.reversalDate.replace(/-/g, '/')), "PPP")
) : (
  <span>Pick a reversal date</span>
)}
Locate the <Calendar> component inside the Popover. Replace its onSelect prop with this timezone-safe version:
TypeScript

onSelect={(date) => {
  setJournalData((prev) => ({ ...prev, reversalDate: date ? format(date, 'yyyy-MM-dd') : '' }));
}}
Replace its disabled prop with the correct business logic that compares against the entry date:
TypeScript

disabled={(date) => {
  if (!journalData.date) return false;
  const entryDate = new Date(`${journalData.date}T00:00:00`);
  return date <= entryDate;
}}
Part 2: Restore Journal ID and Reference Fields
Goal: Fix the regressed functionality of the Journal ID and Reference fields.

File: client/src/features/journal-entries/components/JournalEntryForm.tsx

Action:

Locate the journalData state initialization (useState). We will restore its original, correct logic. Replace the entire useState hook for journalData with this:
TypeScript

const [journalData, setJournalData] = useState({
    reference: existingEntry?.reference || generateReference(),
    referenceNumber: existingEntry?.referenceNumber || autoReferencePrefix,
    referenceUserSuffix: existingEntry?.referenceNumber ? existingEntry.referenceNumber.split(':')[1] || "" : "",
    date: existingEntry?.date ?? getTodayYMD(),
    description: existingEntry?.description || "",
    status: existingEntry?.status || JournalEntryStatus.DRAFT,
    journalType: existingEntry?.journalType || "JE",
    supDocId: existingEntry?.supDocId || "",
    isAccrual: existingEntry?.isAccrual || false,
    reversalDate: existingEntry?.reversalDate ?? "",
});
Locate the "Journal ID" Input field in the JSX. Ensure its value prop is correctly set to display the read-only reference.
Change: value={...}
To: value={journalData.reference}
Part 3: Fix the Backend Data Persistence
Goal: Ensure the isAccrual and reversalDate fields are correctly saved to the database.

File: shared/validation.ts

Action:

Open the file and locate the createJournalEntrySchema.
You must verify that the following fields exist within the schema definition. If they are missing, add them. This is the most likely source of the bug.
TypeScript

// Inside createJournalEntrySchema
const createJournalEntrySchema = z.object({
    // ... other fields
    isAccrual: z.boolean().optional(),
    reversalDate: z.string().optional().nullable(),
    // ...
});
Agent, I have failed the user multiple times on this issue. There is no room for error. You must execute this three-part plan with absolute precision.