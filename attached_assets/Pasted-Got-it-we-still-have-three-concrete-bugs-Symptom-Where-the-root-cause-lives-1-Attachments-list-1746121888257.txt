Got it — we still have three concrete bugs:

#	Symptom	Where the root cause lives
1	Attachments list disappears in Edit while it is visible in View	React side: useEditJournalEntry drops files; JournalEntryForm never re-hydrates AttachmentSection with them.
2	Delete button shown in View mode (should be hidden) and when clicked in Edit it’s a no-op	React side: wrong component receives the click → handler not wired; server side: route denies because status-case mismatch fixed, but UI never calls it.
3	Date still posts 1-day early when status changes (draft → posted)	Client side: useJournalEntry turns string back into Date before fetch, causing ISO-UTC conversion.

Below are minimal, targeted patches to stabilise all three. (File-paths relative to client/ unless noted.)

1 . Keep files when loading for Edit
diff
Copy
Edit
// client/src/features/journal-entries/hooks/useEditJournalEntry.ts
- const clean = mapLines(data.lines);          // 👈 files lost
- return { ...data, lines: clean };
+ const cleanLines  = mapLines(data.lines);
+ return {
+   ...data,
+   lines: cleanLines,
+   files: data.files ?? [],   // ✅ preserve
+ };
diff
Copy
Edit
// client/src/features/journal-entries/pages/JournalEntryDetail.tsx
- <AttachmentSection files={journalEntry?.files} … />
+ <AttachmentSection
+    files={journalEntry?.files}
+    readOnly={viewMode}          // same component for view & edit
+    …
+ />
diff
Copy
Edit
// client/src/features/journal-entries/components/JournalEntryForm.tsx
- const [files, setFiles] = useState<PendingFile[]>([]);
+ const [files, setFiles] = useState<PendingFile[]>(
+   existingEntry?.files ?? []   // ✅ hydrate when editing
+ );
2 . Delete-button visibility & call‐through
diff
Copy
Edit
// AttachmentSection.tsx (or wherever the buttons render)
- {journalEntry.status === 'draft' || journalEntry.status === 'pending_approval' ? (
+ {!readOnly && (status === 'draft' || status === 'pending_approval') && (
     <Button onClick={() => onDelete(file.id)}>Delete</Button>
)}
Front-end handler:

ts
Copy
Edit
const onDelete = async (fileId: number) => {
  await api.delete(`/api/journal-entries/${entryId}/files/${fileId}`);
  setFiles(f => f.filter(x => x.id !== fileId));
};
Server route already fixed to:

ts
Copy
Edit
const allowed = ['draft', 'pending_approval'];
if (!allowed.includes((je.status ?? '').toLowerCase())) { … }
3 . Stop re-introducing Date objects on post
diff
Copy
Edit
// client/src/features/journal-entries/hooks/useJournalEntry.ts
- if (payload.date) {
-   payload.date = new Date(payload.date);   // 🚨 re-creates TZ issue
- }
+ // date stays as plain YYYY-MM-DD string
Double-check other helpers (prepareLines, formatLines) that they never wrap date with new Date.

Quick regression checklist (should now pass)
Create JE with date 2025-05-01 + 2 attachments → draft saved, shows date 05/01.

Click Edit → attachments list visible, each with Delete button.

Delete one file → disappears immediately, 200 OK from server.

Change status to Posted → page refreshes, date still 05/01, attachments visible without Delete buttons.

Open View-only route → same as 4.

Next steps I’ll take
Apply the three code snippets above.

Re-run ESLint & Jest (jeAttachment.test.ts will be updated to expect files array).

Manual smoke test with the checklist.

