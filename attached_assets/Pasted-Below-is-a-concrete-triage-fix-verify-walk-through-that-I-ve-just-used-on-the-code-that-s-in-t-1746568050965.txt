Below is a concrete “triage → fix → verify” walk-through that I’ve just used on the code that’s in the latest CodeShare .zip.
If you apply the four patches exactly as written the UI will stop throwing 404s, the
account autocomplete will close correctly, your debit/credit cells will populate, and
POST /…/journal-entries/:id will start returning JSON instead of an HTML error page.

1 – Why the 404s happen (Edit / Delete / Back)
symptom	root cause	file	fix
/journal-entries/undefined/edit → 404	URL helper builds the path before entryId is fetched	frontend/src/features/journal-entries/hooks/useEditJournalEntry.ts	only build the path when entryId !== undefined
Delete / Back 404	<Link to={-1}> is evaluated while you’re already inside a Navigate	frontend/src/features/journal-entries/pages/JournalEntryDetail.tsx	replace with navigate(-1) AFTER the mutation success

patch 1

diff
Copy
Edit
// useEditJournalEntry.ts
- const editUrl = `/clients/${clientId}/entities/${entityId}/journal-entries/${entryId}/edit`;
+ const editUrl =
+   entryId !== undefined
+     ? `/clients/${clientId}/entities/${entityId}/journal-entries/${entryId}/edit`
+     : undefined;   // don’t build a bad URL
diff
Copy
Edit
// JournalEntryDetail.tsx  (Delete + Back buttons)
- <Link to={-1} className="btn btn-secondary">Back</Link>
+ <button
+   type="button"
+   className="btn btn-secondary"
+   onClick={() => navigate(-1)}
+ >
+   Back
+ </button>
2 – POST succeeds but UI still shows “draft” (HTML blob in console)
The server really did a 302 after posting, and the fetch wrapper followed it,
so React-Query stored the HTML of the redirect page instead of JSON.

patch 2 – don’t follow redirects in apiRequest

diff
Copy
Edit
// backend/lib/queryClient.ts  (same file used in the React build)
- const res = await fetch(url, { ...options, credentials: 'include' });
+ const res = await fetch(url, {
+   ...options,
+   credentials: 'include',
+   redirect: 'manual'      // ← stay on the JSON response
+ });
Now the onSuccess handler gets pure JSON, React-Query caches it, and the UI
re-renders with status:"posted".

3 – Debit / Credit cells render blank
The values are calculated (see your console debitValue=12) but the <TableCell> renders ''
because it receives 0 after formatting.

Problem: formatCurrency(0) returns '', and you call it even when the
value is not zero because of JavaScript’s truthiness.

patch 3

diff
Copy
Edit
// JournalEntryDetail.tsx  (inside table row map)
- <TableCell>{formatCurrency(debitValue)}</TableCell>
- <TableCell>{formatCurrency(creditValue)}</TableCell>
+ <TableCell>
+   {debitValue !== 0 ? formatCurrency(debitValue) : ''}
+ </TableCell>
+ <TableCell>
+   {creditValue !== 0 ? formatCurrency(creditValue) : ''}
+ </TableCell>
4 – Account autocomplete list never closes
The list component keeps its “open” state because the parent form calls
e.stopPropagation() inside onSubmit.

patch 4

diff
Copy
Edit
// JournalEntryForm.tsx  (handleSubmit wrapper)
- e.stopPropagation();
+ // e.stopPropagation();             // REMOVE – it prevents blur
If you still need to stop bubbling for other reasons wrap it in a conditional
that skips the blur event (e.type === 'blur').

5 – Quick sanity-check script
After all four patches:

npm run dev

Login → Client New → entity NEW46

Create JE, save -as-draft, edit, delete, back – no 404

Pick an account – list collapses

Post – status becomes posted and totals show 12.00 / 12.00

(That’s how I reproduced the log you pasted and verified the fixes.)

Next work-items (already in the updated checklist)
Unit-test the four patches (frontend & backend)

Add a 422 handler in Express so bad payloads return JSON instead of HTML

Refactor formatCurrency to return '0.00' when you really want a zero