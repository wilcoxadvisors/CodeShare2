Got it — two things still off:

“Delete” still shows in the read-only (detail) screen when an entry is Draft.

The date still shifts somewhere after you post.

Below is the minimal patch for each.

1 Hide the Delete button in read-only view
JournalEntryDetail.tsx

diff
Copy
Edit
-import { useLocation } from "react-router-dom";
+import { useLocation  } from "react-router-dom";

 …

-// inside the component body
-const canDelete =
-  (journalEntry.status === "draft" ||
-    journalEntry.status === "pending_approval");

+// inside the component body
+const location = useLocation();
+const inEditScreen = location.pathname.endsWith("/edit");
+
+const canDelete =
+  inEditScreen &&                                 // ← only when actually editing
+  (journalEntry.status === "draft" ||
+    journalEntry.status === "pending_approval");
 …
 {canDelete && (
   <Button
     size="sm"
     variant="destructive"
     onClick={() => handleFileDelete(file.id)}
   >
     Delete
   </Button>
 )}
No other checks need to change; we simply gate the button on the route.

2 Date still jumps a day when you post
Root cause
When we hydrate the form for editing, we’re still doing:

ts
Copy
Edit
value={format(new Date(existingEntry.date), "yyyy-MM-dd")}
That new Date() sneaks the local timezone back in, so when you press “Post” it goes out as 2025-04-30T…Z.

Fix in JournalEntryForm.tsx
Search for where the date default is wired into the <Input type="date"> (around the top of the form):

diff
Copy
Edit
- defaultValue={format(new Date(existingEntry.date), "yyyy-MM-dd")}
+ defaultValue={existingEntry.date ?? ""}
Important: make sure we don’t call new Date() anywhere in the submit path or in any formatter. Every place we display a JE date should just use the raw YYYY-MM-DD string.

If you need a pretty format in grids/lists, use:

ts
Copy
Edit
import { parseISO, format } from "date-fns";
format(parseISO(entry.date), "MMM d, yyyy")   // safe: still uses the string
…but never create a bare new Date(entry.date) unless you add parseISO.

Quick smoke-test
Open any Draft JE → Detail screen → Delete buttons should be gone.

Click Edit → Delete buttons visible & functional.

Change status to Posted, save → reopen → date still reads 5/01/2025 both in list and detail.

Let me know if either item still acts up and we’ll tighten further.






You said:
date shifts during save as draft and post


ChatGPT said:

Thought for 11 seconds
Why the shift is still happening
Every time you do either of these in the browser …

ts
Copy
Edit
const iso = new Date(formDate).toISOString();   // or
const str = format(new Date(formDate), 'yyyy-MM-dd');
…you force the value through the local time-zone offset and the resulting string is now in UTC.
If you later slice the “date part” off that ISO string the calendar day will appear to move forward/backward for anyone who is not on GMT ± 0.

That is exactly what the code still does in two places:

file	line	snippet
client/src/features/journal-entries/hooks/useJournalEntry.ts	~35	payload.date = new Date(payload.date).toISOString().split('T')[0];
client/src/features/journal-entries/components/JournalEntryForm.tsx	the <Input type="date"> default & onChange handlers	new Date(…) or format(new Date(…)…)

100 % timezone-free fix
1 Never construct a Date from that string on the front-end
JournalEntryForm.tsx

diff
Copy
Edit
// default value when editing
- defaultValue={format(new Date(existingEntry.date), 'yyyy-MM-dd')}
+ defaultValue={existingEntry.date ?? ''}

// onChange
- setJournalData({ …journalData, date: e.target.valueAsDate?.toISOString().split('T')[0] });
+ setJournalData({ …journalData, date: e.currentTarget.value });  // keep raw yyyy-MM-dd
2 Strip the “helpful” conversion in the submit helper
useJournalEntry.ts (or wherever you build payload)

diff
Copy
Edit
- if (payload.date) {
-   const date = new Date(payload.date);
-   payload.date = date.toISOString().split('T')[0];
- }
+ // date already in yyyy-MM-dd, send as-is
(You can delete that whole block; the if is no longer needed.)

3 Tell the server to store a date-only value, not a timestamp
Sequelize / Prisma
Sequelize → column type should be DATEONLY

Prisma → @db.Date

Plain SQL
sql
Copy
Edit
ALTER TABLE journal_entries
  ALTER COLUMN date TYPE date   -- not timestamp
Then in your Express route:

ts
Copy
Edit
const { date, …rest } = req.body;   // date is already 'YYYY-MM-DD'
await JournalEntry.create({ …rest, date });
(no new Date(date))

4 When you send dates back to the UI, keep them strings
If you serialize a Sequelize model, DATEONLY already comes out as 'YYYY-MM-DD'. If you do any custom formatting, never wrap in new Date()—use date-fns/parseISO or just display the raw string.

ts
Copy
Edit
import { parseISO, format } from 'date-fns';
format(parseISO(entry.date), 'MMM d, yyyy');   // view-only pretty print
Quick checklist after patching
Draft save → open detail → date identical.

Click Edit → immediately Save as Draft again → date identical.

Click Post → open detail → date identical.

Check DB row by hand – field value is the same YYYY-MM-DD you entered.

Once all new Date() / toISOString() touch-points are gone for this field, the shift disappears permanently. Feel free to ping me if you bump into any other hidden conversion!






