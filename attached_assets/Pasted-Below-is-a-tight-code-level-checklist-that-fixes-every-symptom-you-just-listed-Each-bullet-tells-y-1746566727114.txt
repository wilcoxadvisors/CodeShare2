Below is a tight, code-level checklist that fixes every symptom you just listed.
Each bullet tells you why it’s broken, followed by the exact patch ( ▸ lines to add / ­lines to delete ).

1 · Edit / Delete / Back go to 404
Root cause
We’re building routes with entry.referenceNumber instead of the database id.
When the app hits /…/journal-entries/111/edit the server has no such page, hence 404.
The same bad id is used in the DELETE call.

Fix
1-a Update link targets in JournalEntries.tsx (table row actions)
diff
Copy
Edit
- const editUrl   = `/journal-entries/${row.original.referenceNumber}/edit`;
- const detailUrl = `/journal-entries/${row.original.referenceNumber}`;
+ const editUrl   = `/journal-entries/${row.original.id}/edit`;
+ const detailUrl = `/journal-entries/${row.original.id}`;
1-b Align the router & hook
diff
Copy
Edit
// src/App.tsx  (or wherever the routes live)
- <Route path="journal-entries/:referenceNumber/edit" element={<JournalEntryForm />} />
+ <Route path="journal-entries/:entryId/edit"        element={<JournalEntryForm />} />

// src/features/journal-entries/hooks/useEditJournalEntry.ts
- const { referenceNumber } = useParams();
+ const { entryId }         = useParams();
1-c DELETE endpoint needs the numeric id
diff
Copy
Edit
// JournalEntryDetail.tsx  (handleDeleteEntry)
- await apiRequest(`${baseUrl}/${entry.referenceNumber}`, { method: "DELETE" });
+ await apiRequest(`${baseUrl}/${entry.id}`,            { method: "DELETE" });
Back now works automatically because the edit page is no longer a 404.

2 · “Post entry” still fails
Root cause
Your backend follows the (Intacct-style) convention
POST /journal-entries/:id/post – it does not allow “PUT with status=posted”.
That’s why you get an HTML 404 page even though fetch returns ok (the dev-server rewrites unknown paths to index.html).

Fix
diff
Copy
Edit
// src/features/journal-entries/hooks/useJournalEntry.ts
const postJournalEntry = (id: number, payload: any) =>
-  apiRequest(`${baseUrl}/${id}`, { method: "PUT", data: payload });
+  apiRequest(`${baseUrl}/${id}/post`, { method: "POST" });   // payload not required
Remove the status: "posted" mutation entirely – the backend sets it.

And don’t forget to invalidate caches:

diff
Copy
Edit
onSuccess: () => {
  queryClient.invalidateQueries(["journalEntry", id]);
  queryClient.invalidateQueries([getJournalEntriesBaseUrl(clientId, entityId)]);
}
3 · Debit / Credit numbers are calculated but not rendered
Root cause
In JournalEntryDetail.tsx we build local let debitValue / creditValue inside the
if (…) { … } else if (…) { … } blocks, then render the outer (still-zero) vars.

Fix
diff
Copy
Edit
                let debitValue  = 0;
                let creditValue = 0;

-               if (isClientFormatLine(line)) {
-                 let debitValue  = parseFloat(line.debit)  || 0;   // --- shadowing!
-                 let creditValue = parseFloat(line.credit) || 0;
+               if (isClientFormatLine(line)) {
+                 debitValue  = parseFloat(line.debit)  || 0;
+                 creditValue = parseFloat(line.credit) || 0;
                } else if (isServerFormatLine(line)) {
-                 const amount = parseFloat(line.amount.toString()) || 0;
-                 let debitValue  = line.type === "debit"  ? amount : 0;
-                 let creditValue = line.type === "credit" ? amount : 0;
+                 const amount = parseFloat(line.amount.toString()) || 0;
+                 debitValue  = line.type === "debit"  ? amount : 0;
+                 creditValue = line.type === "credit" ? amount : 0;
                }
No more shadowing ⇒ the cells render the numbers that your debug log shows.

4 · Account dropdown doesn’t close after pick
Root cause
The Autocomplete keeps focus because we never reset the search string.

Fix (React-Select example)
diff
Copy
Edit
onChange={(option) => {
  setValue("lines."+idx+".accountId", option.value);
- setAccountSearch(option.label);   // leaves menu open
+ setAccountSearch("");             // clears input => menu closes
}}
Smoke-test checklist
Edit an entry → URL shows /…/140/edit, form pre-populated.

Delete the same entry → confirmation, 204, list refreshes.

Post a draft → backend returns 200 JSON, UI shows status “posted”, buttons disappear.

Debit & credit numbers show in both list and detail view.

Account dropdown collapses after you choose an account.

Apply the four snippets above, hit ⌘-S / Ctrl-S and npm run dev.
Ping me with the next console log if anything still misbehaves — but these patches close every hole that surfaced in your last trace.