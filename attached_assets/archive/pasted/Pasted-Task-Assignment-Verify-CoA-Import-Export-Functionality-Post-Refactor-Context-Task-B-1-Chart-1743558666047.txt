Task Assignment: Verify CoA Import/Export Functionality (Post-Refactor)

Context:
Task B.1 (Chart of Accounts) is functionally complete, including the major refactoring of code to accountCode. We now need to ensure the previously implemented Import/Export features correctly handle this change.

Goal:
Verify that the Chart of Accounts Import (CSV/Excel) correctly processes files expecting accountCode and that Export generates files containing accountCode.

Instructions:

Part 1: Prepare Import Test Files

Action: Locate/Create Import Test Files:
Find the existing CoA import test files (likely in test/data/coa-import/ after the cleanup, e.g., valid_import.csv, test_update_delete.csv).
If necessary, create new test files (one CSV, one Excel):
Ensure the header row uses accountCode (or the exact header expected by the import function) instead of code.
Include rows to test:
Adding brand new accounts.
Updating existing accounts (match should happen based on accountCode and clientId).
Attempting to delete an account (verify if it's marked inactive, especially if it's a parent with children).
Include the new fields (fsliBucket, internalReportingBucket, item) with sample data or leave them blank/null.
Note the paths to the test files used.
Part 2: Verify CoA Import via UI

Action: Ensure Application is Running & Logged In:

Verify the application is running (npm run dev).
Ensure you are logged in as admin (admin / password123).
Action: Test CSV Import via UI Simulation:

Use the web application tool to navigate to the Chart of Accounts page for a suitable test client (e.g., ID 100, or another test client).
Simulate clicking the "Import" button.
Simulate uploading the test CSV file (prepared in Step 1).
Observe any preview/validation steps in the UI.
Simulate confirming the import.
Observe & Report: Did the import complete successfully according to the UI? Note any success or error messages.
Verify Data: Briefly check the CoA display in the UI (or via API/DB) to confirm the accounts from the CSV were added/updated correctly, matching based on accountCode.
Action: Test Excel Import via UI Simulation:

Repeat Step 3 using the test Excel file.
Part 3: Verify CoA Export via UI

Action: Test CSV Export via UI Simulation:

Use the web application tool to navigate to the Chart of Accounts page for a client with data (e.g., ID 100).
Simulate clicking the "Export" button (select CSV format if prompted).
Analyze Exported File: Obtain the content of the exported CSV file.
Does the header row correctly contain accountCode?
Does the data column for accountCode contain the correct values?
Are the new fields (fsliBucket, internalReportingBucket, item) included in the export?
Report findings based on the file content.
Action: Test Excel Export via UI Simulation:

Repeat Step 5 using the Excel export option, analyzing the resulting Excel file.
Verification:

Confirm CSV and Excel imports successfully add/update accounts based on accountCode.
Confirm CSV and Excel exports generate files with the correct accountCode header and data, including the new reporting fields.
Reporting:

Report PASS/FAIL for CSV Import verification (Step 3). Detail any errors or data mismatches.
Report PASS/FAIL for Excel Import verification (Step 4). Detail any errors or data mismatches.
Report PASS/FAIL for CSV Export verification (Step 5). Describe the exported file's structure (headers, data). Attach the file or relevant content if possible.
Report PASS/FAIL for Excel Export verification (Step 6). Describe the exported file's structure. Attach the file or relevant content if possible.
If all checks pass, confirm that CoA Import/Export functionality is working correctly post-refactor.