Agent Instructions: Finalize & Verify EntityManagementCard.tsx (Phase 2, Step 5b)

Goal: Ensure the EntityManagementCard.tsx component (Step 2 of the 3-step setup flow) correctly allows adding/managing entities for the new client being created, passes data appropriately, and handles navigation.

Relevant Files:

client/src/components/setup/EntityManagementCard.tsx
client/src/pages/Dashboard.tsx (or SetupStepper.tsx - managing the flow state/handlers like activeStep, clientData, setEntityData, onNext, onBack)
server/adminRoutes.ts (Entity creation API endpoint)
shared/schema.ts (Entity schema)
Steps:

Review EntityManagementCard.tsx Implementation:
Action: Open client/src/components/setup/EntityManagementCard.tsx.
Verify:
Receiving Client Context: Does the component correctly receive the clientData (or clientId) prop from the parent/stepper (passed from Step 1)?
Initial State: Does the entity list (setupEntities state or similar) start empty when the component loads for a new client setup? (This was the core bug fixed previously, double-check it remains fixed).
Form Fields & Validation: Does the "Add Entity" form contain the correct fields (Name, Code, optional fields like Address/Phone)? Is validation using Zod schema correct?
Verify Entity CRUD within Session:
Action: Analyze the handlers for adding and deleting entities within this setup session.
Verify (Add): Does the onSubmit handler for adding an entity correctly include the clientId (from the clientData prop) in the payload sent to the POST /api/admin/entities API? Does it successfully add the new entity to the local setupEntities state upon API success?
Verify (List): Does the UI correctly display only the entities held in the local setupEntities state?
Verify (Delete): Is there a delete button for entities listed in setupEntities? Does clicking it correctly remove the entity from the setupEntities state? (Note: We might not need an API call here if these entities only truly exist after the entire setup is finished, or we might need a temporary/staging mechanism - confirm the intended logic).
Verify (Add Multiple): Does the flow allow adding more than one entity during this step?
Verify Data Passing & Navigation:
Action: Examine the "Back" and "Next" button handlers.
Verify (Back): Does the "Back" button correctly call the onBack prop, triggering the parent to setActiveStep(0)?
Verify (Next): Is the "Next" button disabled until at least one entity has been added to setupEntities? When enabled and clicked, does it correctly call the onNext function prop, passing the current list of setupEntities up to the parent? Does calling onNext successfully trigger the parent component to update state (e.g., setEntityData(setupEntities)) and advance the step (setActiveStep(2))?
Test the Flow (Simulated):
Action: Simulate the user interaction for Step 2:
Arrive from Step 1 (assume valid clientData is passed).
Verify the entity list is empty.
Add Entity 1 -> Verify API call includes correct clientId, success response, entity appears in list.
Add Entity 2 -> Verify API call, success response, entity appears with Entity 1.
Delete Entity 1 -> Verify it's removed from the list state.
Click "Next".
Analyze:
Do API calls succeed?
Is the setupEntities state managed correctly?
Is the correct setupEntities data passed via onNext?
Does the UI transition to show Step 3 (SetupSummaryCard)?
Report: Confirm that Step 2 (EntityManagementCard) functions correctly â€“ allows adding/managing entities for the session, passes the entity list up, and s