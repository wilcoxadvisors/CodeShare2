Architect's Mission: Finalize Context Selector UI Polish
1. Goal

Apply a definitive, surgical fix to the GlobalContextSelector to resolve the "phantom checkmark" bug that is specifically affecting the Chart of Accounts page.

2. Root Cause Analysis

You are correct. The bug is isolated because of a subtle flaw in the component's state management when interacting with the Chart of Accounts route.

While our last fix correctly hid the controls (the chevrons), it did not address the core issue: the component remembers that a client was previously expanded when you were on the Journal Entries page. When you navigate to the Chart of Accounts, it continues to render that client's list of entities, even though it shouldn't. The phantom checkmark appears simply because that entity list is still being drawn on the screen.

The reason it works for the Dimensions page but fails for the Chart of Accounts page is likely due to subtle differences in their render timing or component structure, but the architectural solution is the same for both: we must explicitly forbid the rendering of the entity list on any page that is client-only.

3. Definitive Fix Plan (Revised & Final)

We will apply a more robust version of the previous fix. This will not just hide the checkmark; it will prevent the entire list of entities from ever appearing in the DOM on client-only pages. All changes are in client/src/components/dashboard/GlobalContextSelector.tsx.

Confirm Route-Aware Flag: We will continue to use the isEntitySelectionView flag, which we have verified is logically correct.

TypeScript

const isEntitySelectionView = !location.pathname.includes('/chart-of-accounts') && !location.pathname.includes('/manage/dimensions');
Enforce Conditional Rendering of the Entire Entity List:

Locate the block of code that renders the list of entities. It will be wrapped in a condition that checks if the client is expanded, like this: {expandedClients[client.id] && ... }
The flaw in our previous attempt was only wrapping the checkmark icon. The correct, definitive fix is to wrap this entire block with our isEntitySelectionView flag. The logic must be absolute: render the entity list if the client is expanded AND if we are in an entity-selection view.
Update the code to be:
JavaScript

{expandedClients[client.id] && isEntitySelectionView && (
  // The entire .map() function that renders the list of entities
  // should be inside this block.
  <ul>
    {filteredEntities.map(entity => (
      ...
    ))}
  </ul>
)}
4. Expected Outcome

This change creates an unbreakable rule for the UI:

A user is on the Journal Entries page with "Client A" expanded and "Entity X" selected.
The user navigates to the Chart of Accounts for "Client A".
The GlobalContextSelector re-renders, and isEntitySelectionView correctly becomes false.
The master condition expandedClients[client.id] && isEntitySelectionView will now be false.
The entire block of code that renders the entity list will be skipped. It will not exist in the HTML.
The phantom checkmark bug is now resolved permanently, as the element it belongs to is no longer on the screen.
This fix is architecturally sound and will align the component's behavior with the high standards we have set for the platform.