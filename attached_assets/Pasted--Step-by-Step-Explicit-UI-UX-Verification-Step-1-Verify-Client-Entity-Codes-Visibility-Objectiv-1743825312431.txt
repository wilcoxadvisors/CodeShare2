âœ… Step-by-Step Explicit UI/UX Verification
Step 1: Verify Client & Entity Codes Visibility

Objective:
Confirm that the new alphanumeric client codes and hierarchical entity codes clearly appear throughout the UI.

Actions (Please Perform):

Open the Dashboard:

 Explicitly confirm each client displays its client code in a visible, intuitive location.

 Confirm the codes are easily readable (use a consistent font like monospace if needed).

Select a Client Detail:

 Explicitly confirm client code visibility on the Client Detail Modal.

Go to Entity Management (under setup):

 Confirm each entity clearly displays its hierarchical entity code (e.g., CLIENT001-0001).

 Confirm entity codes explicitly show up in entity listings.

Step 2: Verify Form Reset Behavior

Objective:
Ensure forms do not retain residual data, eliminating confusion during client/entity creation or modification.

Actions (Please Perform):

Add Client Dialog (from Dashboard):

Open the "Add Client" dialog.

Enter dummy data explicitly into several fields.

 Close the dialog without saving.

Reopen explicitly and confirm fields are fully reset.

 Explicitly complete and submit a new client.

Reopen the dialog explicitly and confirm fields have reset again.

Entity Management Form:

Open the Entity Management section explicitly.

Create or select an entity.

Modify form fields without saving.

Delete another entity explicitly.

 Confirm explicitly that your form modifications remain intact and are not reset unintentionally.

Step 3: Verify Soft Deletion and Inactive Status

Objective:
Ensure clear differentiation between entities marked as inactive vs. explicitly deleted.

Actions (Please Perform):

Inactive vs. Deleted:

Explicitly mark an entity as "Inactive" and observe visual cues.

Explicitly soft-delete a different entity.

 Confirm UI explicitly differentiates clearly between "Inactive" and "Deleted":

Use of labels, color coding, or icons.

Admin-Only Delete Controls:

Log in explicitly as an Admin:

 Confirm explicitly the Delete button appears for entities and clients.

 Confirm explicit confirmation prompts appear clearly before deletion.

Log in explicitly as a non-admin:

 Explicitly confirm the Delete button is not available.

Restore Functionality:

Explicitly test restoring a previously deleted entity/client.

 Verify explicit UI clarity and confirm the entity/client becomes visible and active again.

Step 4: Verify Audit Logs UI (for Admins)

Objective:
Explicitly confirm that audit logs of critical actions (create, delete, restore) are easily accessible, clear, and contain necessary information.

Actions (Please Perform):

Log in explicitly as an Admin.

Access audit logs explicitly (if UI exists for this):

 Verify entries explicitly show actions such as:

Entity deletion/restoration.

Client creation/deletion.

 Confirm each log entry explicitly includes:

Admin user performing the action.

Timestamp.

Relevant entity/client details.

If explicit UI does not exist yet:

 Confirm backend logs are explicitly accessible or plan explicitly to include UI.

Step 5: Comprehensive Form Field Persistence Check (Issue #9)

Objective:
Explicitly confirm all forms retain user-entered data upon encountering validation errors, and no unexpected loss occurs.

Actions (Please Perform):

Client Form Testing:

Explicitly enter incomplete or incorrect data into required fields.

Submit explicitly and trigger validation errors.

 Confirm explicitly all previously entered data remains visible and intact, prompting clear instructions to the user on how to proceed.

Entity Form Testing:

Repeat explicitly the above step for entity creation/edit forms.

ðŸš¦ Next Steps:
Let's start explicitly with Step 1 (Client & Entity Codes Visibility).

Once you've explicitly performed each action in Step 1, please report back with:

Explicit confirmation or issues encountered.

Any feedback on clarity and visibility of client and entity codes.