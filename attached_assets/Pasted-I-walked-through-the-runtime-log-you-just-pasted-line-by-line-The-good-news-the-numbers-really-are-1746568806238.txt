I walked through the runtime log you just pasted line–by–line.
The good news: the numbers really are in the data (see debitValue/creditValue prints) and the API calls are succeeding.
The bad news: the UI pieces that should display those values or navigate to the right screens were not patched yet, so the same symptoms remain (404s, blank columns).

Below is the exact diff you still need to drop in.
Nothing else – apply these three hunks, hit ⌘-S / npm run dev, and you’ll see the fixes immediately.

1 · Add the hierarchical JE routes once
client/src/App.tsx

diff
Copy
Edit
+<Route
+  path="clients/:clientId/entities/:entityId/journal-entries/:id"
+  element={<JournalEntryDetail />}
+/>

+<Route
+  path="clients/:clientId/entities/:entityId/journal-entries/:id/edit"
+  element={<JournalEntryForm editMode />}
+/>

+<Route
+  path="clients/:clientId/entities/:entityId/journal-entries/:id/delete"
+  element={<DeleteJournalEntry />}
+/>
2 · Make every JE link/include the client & entity IDs
2-a Row-click in the list
client/src/features/journal-entries/pages/JournalEntries.tsx

diff
Copy
Edit
-const handleRowClick = (id:number) => navigate(`/journal-entries/${id}`);
+const { clientId, entityId } = useContext(EntityContext);   // already injected
+const handleRowClick = (id:number) =>
+  navigate(`/clients/${clientId}/entities/${entityId}/journal-entries/${id}`);
2-b Buttons in the detail screen
client/src/features/journal-entries/pages/JournalEntryDetail.tsx

diff
Copy
Edit
+const { clientId, entityId } = useParams();   // import useParams at top

 {/* Back */}
-<Button onClick={()=>navigate(-1)}>Back</Button>
+<Button onClick={() =>
+    navigate(`/clients/${clientId}/entities/${entityId}/journal-entries`)
+}>Back</Button>

 {/* Edit icon */}
-<Link to={`/journal-entries/${entry.id}`}>
+<Link to={`/clients/${clientId}/entities/${entityId}/journal-entries/${entry.id}/edit`}>

 {/* Delete icon */}
-<Link to={`/journal-entries/${entry.id}/delete`}>
+<Link to={`/clients/${clientId}/entities/${entityId}/journal-entries/${entry.id}/delete`}>
3 · Actually show the debit / credit numbers
client/src/features/journal-entries/pages/JournalEntryDetail.tsx

diff
Copy
Edit
<TableRow key={line.id}>
  {/* …Account / Description cells… */}

- <TableCell className="text-right">
-   {formatCurrency(line.debit)}
- </TableCell>
- <TableCell className="text-right">
-   {formatCurrency(line.credit)}
- </TableCell>

+ <TableCell className="text-right">
+   {line.type === 'debit'
+     ? formatCurrency(line.amount)
+     : line.debit
+       ? formatCurrency(line.debit)
+       : ''}
+ </TableCell>
+ <TableCell className="text-right">
+   {line.type === 'credit'
+     ? formatCurrency(line.amount)
+     : line.credit
+       ? formatCurrency(line.credit)
+       : ''}
+ </TableCell>
</TableRow>
4 · Dropdown closes after a pick
client/src/features/journal-entries/components/JournalEntryForm.tsx

diff
Copy
Edit
<Select
  value={line.accountId?.toString() ?? ''}
+ onValueChange={(val)=>handleLineChange(idx,'accountId',val)}
>
Apply those four snippets and refresh – you’ll get:

No more 404 on Edit/Delete/Back

Debit / Credit columns populated for every line

Account list collapses immediately after you pick an account