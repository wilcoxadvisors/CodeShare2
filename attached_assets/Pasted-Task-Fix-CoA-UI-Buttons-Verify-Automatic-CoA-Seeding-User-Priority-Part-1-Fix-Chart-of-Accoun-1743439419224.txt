Task: Fix CoA UI Buttons & Verify Automatic CoA Seeding (User Priority)

Part 1: Fix Chart of Accounts UI Button Functionality

Background: User reports buttons on the CoA page are not working. Although you previously refactored mutations (Checkpoint d1a2b1be), we need to ensure they are correctly implemented and functional now.
Action 1: Implement/Verify Add/Edit Mutations:
Open client/src/pages/ChartOfAccounts.tsx and related form components.
Implement/Verify the useAddAccount TanStack Query mutation calling POST /api/clients/:clientId/accounts.
Implement/Verify the useUpdateAccount TanStack Query mutation calling PUT /api/clients/:clientId/accounts/:accountId.
Ensure the form submission handler calls the correct mutation.
Ensure onSuccess handlers invalidate ['accounts', clientId] and ['accounts', 'tree', clientId] queries.
Action 2: Implement/Verify Delete Mutation:
Ensure a confirmation dialog exists.
Implement/Verify the useDeleteAccount TanStack Query mutation calling DELETE /api/clients/:clientId/accounts/:accountId.
Ensure confirmation triggers the mutation.
Ensure onSuccess handler invalidates queries.
Action 3: Verify Import/Export Connections:
Briefly confirm the Import/Export buttons are connected to their respective handler functions.
Report: Confirm that the useAddAccount, useUpdateAccount, and useDeleteAccount mutations are now definitively implemented and integrated. Confirm Import/Export buttons are connected.
Part 2: Verify Automatic CoA Seeding Reliability

Background: User observed new test clients didn't have CoA seeded. While you confirmed the seedClientCoA call exists in createClient in server/storage.ts, we need to verify it works reliably within the transaction.
Action 1: Review createClient in storage.ts:
Re-examine the createClient method in the DatabaseStorage class.
Is the call to this.seedClientCoA(newClient.id) placed correctly within the transaction block (db.transaction(...))? It should happen after the client is inserted but before the transaction completes.
Review the seedClientCoA method itself. Does it have error handling? Could it fail silently? Add temporary detailed logging inside seedClientCoA if necessary to trace its execution during client creation.
Action 2: Perform Direct Test:
Use curl or an equivalent script action to authenticate.
Create a brand new test client via the API: POST /api/admin/clients with a unique name (e.g., "CoA Seeding Test Client XYZ"). Record the newClientId from the successful response.
Immediately after creation, make an API call to fetch the accounts for that new client: GET /api/clients/:newClientId/accounts.
Report: Did the fetch request succeed? Did it return the expected 74 standard accounts? Report the outcome clearly (e.g., "Success: Client [ID] created and 74 accounts were immediately present." or "Failure: Client [ID] created but GET /accounts returned 0 accounts."). Remove any temporary logging added.