Agent Instructions: Update Chart of Accounts Main Query (Frontend)

Goal: Modify the main useQuery hook in client/src/pages/ChartOfAccounts.tsx to fetch the account list using the new client-specific API endpoint (/api/clients/:clientId/accounts).

Relevant Files:

client/src/pages/ChartOfAccounts.tsx (Primary file to modify)
server/accountRoutes.ts (Reference for the correct API endpoint path)
Implementation Steps:

Locate Query:

Action: Open client/src/pages/ChartOfAccounts.tsx.
Action: Find the primary useQuery hook responsible for fetching the list of accounts displayed in the table (the agent likely located this previously [cite: 9acc137a]). It probably uses a query key like ['accounts', entityId] and fetches from /api/entities/....
Determine clientId Source:

Action: Before modifying the query, determine how the relevant clientId is accessed within the ChartOfAccounts component. Is it available from:
React Router parameters (e.g., via useParams() if the route is /clients/:clientId/chart-of-accounts)?
React Context?
Component props?
Action: Report how clientId is (or should be) obtained in this component. If it's not currently available, implement the necessary logic (e.g., add const { clientId } = useParams();). Ensure the obtained clientId is parsed as a number if necessary.
Modify useQuery Hook:

Action: Update the identified useQuery hook:
queryKey: Change the key to be client-specific, incorporating the clientId. Example: queryKey: ['clientAccounts', clientId].
queryFn: Update the Workspace call within the query function to use the new client-specific API endpoint. Example:
JavaScript

const response = await fetch(`/api/clients/${clientId}/accounts`);
// ... (rest of fetch/error handling logic) ...
enabled: Ensure the query is only enabled when a valid clientId (e.g., clientId && clientId > 0) is available.
Action: Report the code changes made to the useQuery hook (the updated queryKey, queryFn, and enabled options).
Verification (Code Review):

Action: Briefly review the component to ensure the data returned by the updated query (data variable from useQuery) is correctly passed to the table or other display elements.
Action: Report that the frontend refactoring for CoA API calls should now be complete, pending testing.