Architect's Mission: Restore Journal Entry Defaults
Priority 1: Fix Journal Entry Line Defaults

1. Goal:

Correct the behavior of the Journal Entry form so that when a new, blank entry is created, it defaults to showing two empty lines. This is the standard accounting practice, as any valid entry requires at least one debit and one credit.

2. Root Cause Analysis:

During the refactoring, the useEffect hook responsible for initializing the state for a new journal entry was likely simplified and now only creates a single line. We must correct this initial state to reflect the required two-line minimum.

3. Definitive Fix Plan:

The change is targeted to a single line of code within the main form component.

File to Modify: client/src/features/journal-entries/components/JournalEntryForm.tsx
Action:
Locate the useEffect hook that has [existingEntry] in its dependency array. This hook controls the initial state of the form.
Find the else block within that hook. This block runs only when creating a new entry (!existingEntry).
Inside the else block, you will find the setLines call. It is currently creating an array with only one line object.
Modify this call to setLines to pass an array containing two identical empty line objects. Each object must be given a unique _key using uuidv4().
Example of the required change:

TypeScript

// Inside the useEffect hook in JournalEntryForm.tsx

// BEFORE:
setLines([
  { _key: uuidv4(), accountId: "", entityCode: defaultEntityCode, description: "", debit: "", credit: "", tags: [] },
]);

// AFTER:
setLines([
  { _key: uuidv4(), accountId: "", entityCode: defaultEntityCode, description: "", debit: "", credit: "", tags: [] },
  { _key: uuidv4(), accountId: "", entityCode: defaultEntityCode, description: "", debit: "", credit: "", tags: [] },
]);
4. Expected Outcome:

When a user clicks the "New Entry" button, the form will now load with two blank lines ready for input, immediately satisfying the minimum requirement for a valid journal entry and aligning with standard accounting software conventions.