Agent Instructions: Fix Critical Bugs in Setup Flow (Steps 2, 3 & Finish)

Goal: Address the specific bugs identified by the user during testing of the 3-step "Add Client" flow. Focus only on these bugs until resolved.

Relevant Files:

client/src/components/setup/EntityManagementCard.tsx (Step 2)
client/src/components/setup/SetupSummaryCard.tsx (Step 3)
client/src/components/setup/SetupStepper.tsx (or Dashboard.tsx - manages state/flow)
client/src/pages/Dashboard.tsx (Client list query invalidation)
Bugs to Fix (In Order):

Fix "Back" Button Deleting Entities (Step 2 - EntityManagementCard.tsx):

Issue: User reports clicking "Back" in Step 2 deletes the entity added in that session. This should only navigate back.
Action:
Debug the onBack prop handler in the parent (SetupStepper or Dashboard). Ensure it only changes the activeStep state (e.g., setActiveStep(0)).
Debug the "Back" button's onClick handler in EntityManagementCard.tsx. Ensure it only calls the onBack prop and does not modify the setupEntities state or trigger API calls. Add console.log to verify its behavior.
Report: Confirm the "Back" button now navigates without altering the setupEntities state.
Fix Entity Deletion Within Setup (Step 2 - EntityManagementCard.tsx):

Issue: User reports they cannot delete entities added during the setup session using the delete button.
Action:
Debug the handleDeleteEntity function in EntityManagementCard.tsx.
Verify it correctly receives the entity.id of the entity to be deleted from the setupEntities list.
Verify the state update logic (setSetupEntities(prev => prev.filter(e => e.id !== entityId))) correctly removes the entity from the local state array. Add console.log before and after the state update to confirm.
Verify the deleteEntityMutation API call is being made correctly if entities created during setup need to be deleted from the backend immediately (confirm this logic - perhaps they only need removing from the local state?). If an API call is made, ensure it succeeds.
Report: Confirm entities added during the setup can now be deleted successfully from the list within Step 2.
Fix Entity Data Not Appearing on Summary (Step 3 - SetupSummaryCard.tsx):

Issue: User reports entity data added in Step 2 does not populate on Step 3.
Action:
Trace Data Flow: Add specific console.log statements:
In EntityManagementCard.tsx, log the setupEntities array just before calling onNext(setupEntities).
In the parent (SetupStepper or Dashboard), log the data received by the handleEntityDataSaved (or similar) function called by onNext.
In the parent, log the state variable that stores this entity data (e.g., entityData).
In the parent, log the entities prop being passed to <SetupSummaryCard entities={entityData} />.
In SetupSummaryCard.tsx, log the props.entities received.
Identify where the data is being lost or not passed correctly and fix the relevant state update or prop drilling.
Report: Confirm entity data is now correctly passed to and displayed on the Summary card (Step 3).
Fix "Finish" Action & Client List Update (Step 3 - SetupSummaryCard.tsx & Dashboard.tsx):

Issue: User reports clicking "Finish" doesn't work, and the new client doesn't appear on the main "Client Status Overview".
Action:
Examine the "Finish" button's onClick handler in SetupSummaryCard.tsx. Add logging. Ensure it calls the onComplete prop.
Examine the onComplete handler in the parent (SetupStepper or Dashboard). Add logging.
Verify it correctly closes the setup modal/dialog (e.g., setAddClientDialogOpen(false)).
Verify Query Invalidation: Ensure the TanStack Query invalidation is called correctly to refresh the client list. The key is likely ['clients']. Double-check the queryClient instance is available and the invalidation call is correct: queryClient.invalidateQueries({ queryKey: ['clients'] });.
Report: Confirm the "Finish" button now works, closes the modal, and (most importantly) the client list on the dashboard successfully refreshes to show the new client.
Testing: After implementing fixes for all the above points, perform one full end-to-end test simulation of the 3-step "Add Client" flow and report the overall success or any remaining failures for these specific bugs. Do not move on to other tasks yet.