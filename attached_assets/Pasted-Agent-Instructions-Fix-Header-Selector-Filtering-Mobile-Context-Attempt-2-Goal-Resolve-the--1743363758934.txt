Agent Instructions: Fix Header Selector - Filtering, Mobile, Context (Attempt 2)

Goal: Resolve the persistent entity filtering bug, fix mobile responsiveness, improve search effectiveness, and ensure correct context updates in the GlobalContextSelector component. Address user feedback points #2, #4, #5 and the new Search/Mobile issues.

Relevant Files:

client/src/components/dashboard/GlobalContextSelector.tsx (Primary focus)
client/src/components/Header.tsx (Mobile layout)
client/src/contexts/EntityContext.tsx (Verify context setters)
Implementation Steps:

Fix Entity Filtering Logic (CRITICAL RE-CHECK):

Action: Open client/src/components/dashboard/GlobalContextSelector.tsx.
Action: Scrutinize the code block where entity CommandItems are rendered (likely inside a .map() call within the clients.map(...) loop and conditional on expandedClients[client.id]).
Action: Verify the filter is applied correctly: Ensure you are filtering the original entities prop based on the current client.id from the outer loop before you map the results to CommandItems. Example structure:
JavaScript

{expandedClients[client.id] && (
  entities // Use the original entities prop here
    .filter(entity => entity.clientId === client.id) // Apply the filter
    .map(entity => ( // Map over the FILTERED result
      <CommandItem
        key={`entity-${entity.id}`}
        value={`${entity.name} ${entity.id}`} // Ensure value is useful for search
        className="pl-4" // Indentation
        onSelect={() => selectEntity(entity)}
      >
        <Check className={/* ... */} />
        Entity: {entity.name}
      </CommandItem>
    ))
)}
Action: Add detailed console.log statements inside the clients.map but before rendering entity items to show: console.log('Filtering entities for client:', client.id, 'Expanded:', expandedClients[client.id]); const filtered = entities.filter(e => e.clientId === client.id); console.log('Filtered entity result:', filtered); This will explicitly show if the filter is working for each client section.
Fix Entity Context Update (onSelect):

Action: Re-verify the selectEntity function (or the inline onSelect handler for entity items). Ensure it unambiguously calls BOTH setCurrentEntity(entity) with the correct entity object AND setSelectedClientId(entity.clientId). Log the values before the calls: console.log('Setting entity context:', entity); console.log('Setting client context via entity:', entity.clientId);.
Fix Mobile Responsiveness:

Action: Open client/src/components/Header.tsx.
Action: Review the Tailwind classes applied to the container holding the <GlobalContextSelector /> and the selector's trigger button itself. Ensure correct use of responsive prefixes (e.g., hidden sm:flex, flex sm:hidden) to show either the full desktop selector or a compact mobile version (which could be an icon button opening the same Popover/Command list). Remove conflicting classes.
Action: Ensure the PopoverContent for the Command list in GlobalContextSelector.tsx has appropriate mobile styling (e.g., w-[90vw] max-w-[300px] max-h-[60vh] overflow-y-auto) if needed.
Improve Search:

Action: Open client/src/components/dashboard/GlobalContextSelector.tsx.
Action: Confirm that the value prop for both client and entity CommandItems includes the human-readable name (and potentially ID/Code) as implemented previously [cite: 4b4ab795]. Ensure the <CommandInput placeholder="Search clients and entities..." /> is present within the Command structure.
Test Data Cleanup (Offer):

Action: Remind the user: "The test data volume makes UI testing hard. Once this selector is confirmed fixed, would you like me to create a script to help clean up test clients/entities?" (Do not implement cleanup yet).
Verification:

Action: Restart the application. Report build success.
Action: Describe test steps focusing again on the failure points: Does expanding a client now show only that client's entities? Does selecting an entity update the button text correctly? Is the mobile view usable? Is search effective?