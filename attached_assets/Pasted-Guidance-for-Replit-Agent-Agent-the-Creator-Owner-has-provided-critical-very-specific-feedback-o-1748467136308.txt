Guidance for Replit Agent:

Agent, the Creator/Owner has provided critical, very specific feedback on the GlobalContextSelector.tsx UX. Your previous implementation ("auto-expanding all clients" or "auto-expanding only the selected client") is not the desired interaction. We must implement their vision precisely.

The Creator/Owner's Explicit Requirement for GlobalContextSelector.tsx Interaction:

Initial State on Dropdown Open: All clients are listed. All clients appear collapsed by default.
Exception for Persistence: If a selectedClientId and currentEntityId are restored from localStorage, the client corresponding to selectedClientId should be shown as selected/active in the list, and it can be initially expanded to reveal its entities, with the currentEntityId also highlighted if visible. Other clients remain collapsed.
User-Controlled Expansion (Browse):
Each client item must have an expand/collapse icon (e.g., chevron).
Clicking this icon next to a client only expands or collapses that specific client's node to show/hide its nested list of active, non-deleted entities.
This expand/collapse action MUST NOT change the application's currently selected selectedClientId or currentEntity in the EntityContext. It is purely a UI state change for Browse.
Users must be able to expand multiple clients simultaneously.
Selection Actions (Setting Context):
Clicking on an Entity Name (visible under an already expanded client): This action selects the entity.
Call setCurrentEntity(selectedEntity).
Call setSelectedClientId(selectedEntity.clientId).
Close the dropdown (setOpen(false)).
Clicking on a Client Name: This action selects the client.
Call setSelectedClientId(newlyClickedClientId).
Call setCurrentEntity(null) (or the first active entity of this client, if showEntities is true and this is the desired auto-select behavior after client selection).
Ensure the expandedClients state is updated so this newlyClickedClientId is now expanded: setExpandedClients(prev => ({ ...prev, [newlyClickedClientId]: true }));.
If showEntities={false} (for CoA view): Call setOpen(false) to close the dropdown immediately.
If showEntities={true}: The dropdown can remain open, now showing the (newly) expanded client and its entities.
showEntities={false} Prop: When true:
The expand/collapse icons next to clients could be hidden entirely, or do nothing if clicked.
No entities are rendered.
Clicking a client name selects it and closes the dropdown.
Persistence: Client/Entity selections made by the user should persist via localStorage. The manual expansion state of clients within the dropdown does not need to be persisted.
NO PAGE RELOADS: All interactions must be smooth client-side state updates.
Task 1: (IMMEDIATE CRITICAL UX FIX - REVISED AGAIN) Implement True User-Controlled Hierarchical Expansion and Selection in GlobalContextSelector.tsx

Action - Overhaul client/src/components/dashboard/GlobalContextSelector.tsx:

State for Expansion: expandedClients (e.g., useState<Record<number, boolean>>({})) should manage the expand/collapse state for each client ID. Initialize to all false.
Persistence Effect: On initial mount, if selectedClientId is loaded from localStorage (and is valid), set expandedClients({ [selectedClientId]: true }).
toggleClientExpansion(clientId, event) Function:
Attached to the click of the expand/collapse icon for each client.
Must call event.stopPropagation() to prevent the event from bubbling up and triggering client selection.
Flips the expandedClients[clientId] state: setExpandedClients(prev => ({ ...prev, [clientId]: !prev[clientId] }));.
Does not call setSelectedClientId or setCurrentEntity.
Rendering Logic:
Loop through clients to render client items. Each gets an expand/collapse icon.
Nested under each client, if showEntities is true AND expandedClients[client.id] is true, then render its list of active, non-deleted entities.
Selection Logic (Click Handlers on Client/Entity Names):
Client Name Click: Triggers the selectClient logic described above (sets context, expands that client, closes if !showEntities).
Entity Name Click: Triggers the selectEntity logic (sets context, closes dropdown).
Remove conflicting auto-expansion logic: Delete any useEffect that tries to expand all clients when the dropdown opens, or that tries to manage expandedClients based on anything other than direct user toggle or the current selectedClientId from context being expanded on load/selection.
Testing & Verification:

Thoroughly test the scenarios described by the Creator/Owner and my previous detailed test cases, ensuring the "browse vs. select" distinction is clear and functional, and the CoA (showEntities=false) case works.
No page reloads.
Provide ARCHITECT_DEBUG_ logs and a GIF/video if possible.

Agent, this requires careful implementation of the interaction logic. The key is separating the "expand/collapse for Browse" action from the "click to select for context change" action. The Creator/Owner's latest feedback provides the exact model.