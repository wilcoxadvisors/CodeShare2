I can’t open the private CodeShare from here, but the runtime log is loud and clear:
JournalRedirector never returns any JSX after the first render, so the
screen stays blank.
Right now you only console.log() inside the component and return early
inside a useEffect. Returning inside a side-effect does nothing for what
actually gets painted.

Below is the minimal, working render-guard pattern—no effect-logic, no
state, nothing that can dead-lock:

tsx
Copy
Edit
// src/components/JournalRedirector.tsx
import { Outlet } from "react-router-dom";
import { useEntity } from "@/contexts/EntityContext";
import Spinner from "@/components/Spinner";
import NoEntitySelected from "@/components/NoEntitySelected";

const JournalRedirector = () => {
  const { entities, currentEntity, isInitialLoading } = useEntity();

  /* 1️⃣ still doing the very first fetch */
  if (isInitialLoading) return <Spinner />;

  /* 2️⃣ no client picked yet → show placeholder */
  if (!entities.length || !currentEntity) return <NoEntitySelected />;

  /* 3️⃣ happy-path: an entity is active → render JE pages */
  return <Outlet />;
};

export default JournalRedirector;
That’s it—no useEffect, no navigation, no local state.
The router decides what the <Outlet /> shows (list, detail, new JE, …).

Make sure the route tree matches
tsx
Copy
Edit
<Route path="/journal-entries" element={<JournalRedirector />}>
  <Route path="list/:entityId"   element={<JournalEntries />} />
  <Route path="detail/:jeId"     element={<JournalEntryDetail />} />
  <Route path="new/:entityId"    element={<NewJournalEntry />} />
  {/* …other JE routes… */}
</Route>
EntityContext must expose the flag
ts
Copy
Edit
value={{
  entities,            // filtered by selectedClientId
  currentEntity,
  isInitialLoading,    // true exactly until the FIRST fetch settles
  /* …other helpers… */
}}
Hard-refresh after the change
Vite’s “export is incompatible” warnings mean old consumers are hanging on to
the previous context shape. Kill npm run dev, restart it, and hard-reload the
browser once so every module uses the new context.

Quick test

Login → go straight to /journal-entries
Spinner → then the grey “Select a Client & Entity” placeholder.

Pick a client/entity in the header selector → JE list appears.

Switch back to /journal-entries via the sidebar → placeholder shows again.

If you still get “Waiting for initial data load …” after this exact render
logic, drop the new console output for:

tsx
Copy
Edit
console.log('JR guards', { isInitialLoading, entitiesLen: entities.length, hasCurrent: !!currentEntity });
—but the guard above is the simplest, bullet-proof way to break the loop.