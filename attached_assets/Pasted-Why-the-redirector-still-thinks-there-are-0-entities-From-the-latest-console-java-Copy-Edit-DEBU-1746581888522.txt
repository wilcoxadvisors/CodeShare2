Why the redirector still thinks there are “0 entities”
From the latest console:

java
Copy
Edit
DEBUG: Entities data updated – received 49 entities, isLoading=false
JournalRedirector … entities count = 0
That tells us the EntityContext really does have 49 records, but the array exposed to JournalRedirector is empty.
In almost every WAAS screen we filter entities by the currently-selected client (or by currentEntity). Because selectedClientId is still null right after login, the derived list handed to consumers is filtered down to [].

In short:

Stage	Data in context	Why JE sees 0
After fetch	allEntities = 49	selectedClientId = null → entities = allEntities.filter(e => e.clientId === null) → []

1 – Fix it in EntityContext
Make the context auto-select the first client (and its first entity) as soon as entities arrive:

tsx
Copy
Edit
// EntityContext.tsx
useEffect(() => {
  if (queryIsLoading) return;                 // still fetching
  if (!entitiesData.length) return;           // tenant truly empty

  // If nothing is selected yet, pick the first client / entity
  if (selectedClientId == null) {
    setSelectedClientId(entitiesData[0].clientId);
  }
  if (currentEntity == null) {
    setCurrentEntity(entitiesData[0]);        // or by helper
  }
}, [queryIsLoading, entitiesData, selectedClientId, currentEntity]);
Key point: run this effect inside the provider so every consumer instantly sees a non-empty entities array.

Return both the raw list and the filtered one if you need both:

ts
Copy
Edit
const value = {
  allEntities: entitiesData,         // 49 records
  entities,                          // filtered by client
  isLoading: queryIsLoading,
  …
};
2 – Tighten JournalRedirector
Keep its logic simple: as soon as entities.length > 0 it redirects.

tsx
Copy
Edit
const { entities, isLoading, setCurrentEntityById } = useEntity();
const navigate = useNavigate();
const params = useParams();

useEffect(() => {
  if (isLoading) return;                  // still waiting
  if (!entities.length) return;           // context chose no-entity path

  // Pick the route ID if user pasted a link, else first entity
  const targetId = params.id ?? entities[0].id;
  if (!params.id) setCurrentEntityById(targetId);   // sync selection
  navigate(`/journal-entries/list/${targetId}`, { replace: true });
}, [isLoading, entities, params.id]);
Remove the local redirectPath state—navigate is fine here because we’re already inside useEffect.

3 – Re-verify
Cold reload → login

Console:

vbnet
Copy
Edit
EntityContext: allEntities=49 selectedClientId=123
JournalRedirector: entities count = 49 isLoading=false
URL abruptly changes to /journal-entries/list/… and you see the JE grid.

Brand-new tenant (0 entities)

allEntities.length === 0 → redirector does not try to navigate.

Show a friendly “No entities yet” page or CTA.

Cypress spec to lock the behaviour:

js
Copy
Edit
cy.login('admin')
  .visit('/journal-entries')
  .url().should('match', /journal-entries\/list\/\d+/)
  .get('[data-testid="je-table"]').should('be.visible');
Gotchas to avoid
Don’t call navigate (or any setState) inside render.

Ensure isLoading only covers the initial fetch—subsequent refetches should not reset it to true, or the redirector would flicker.

Patch those two provider lines, run the flow again, and the Journal Entry module should finally load every time. If anything still blocks, drop the new console trace and we’ll dig deeper!