Agent Instructions: Implement getEntitiesByClient Function

Goal: Fix the "storage.getEntitiesByClient is not a function" error by implementing the missing function in the DatabaseStorage class within server/storage.ts.

Relevant Files:

server/storage.ts (Implement the function here)
shared/schema.ts (Reference the entities table and its clientId column)
server/adminRoutes.ts (Where the function is called, e.g., line 56)
Steps:

Define Interface (If Necessary):
Open server/storage.ts.
Check the IStorage interface definition. If getEntitiesByClient(clientId: number): Promise<Entity[]>; (or similar) is missing, add it to the interface.
Implement in DatabaseStorage:
Locate the DatabaseStorage class definition within server/storage.ts.
Action: Add the async getEntitiesByClient(clientId: number): Promise<Entity[]> { ... } method to the class.
Inside the method:
Use the Drizzle ORM instance (this.db or db) to query the entities table.
Filter the results where the clientId column in the entities table matches the clientId argument passed to the function.
Ensure you are selecting all necessary fields to return an array of Entity objects (referencing the type defined likely in shared/schema.ts or lib/types.ts).
Include error handling (e.g., try...catch).
Example Implementation:
TypeScript

async getEntitiesByClient(clientId: number): Promise<Entity[]> {
  try {
    // Ensure 'entities' and 'clientId' column name match your schema.ts
    const clientEntities = await this.db
      .select()
      .from(entities)
      .where(eq(entities.clientId, clientId))
      .orderBy(asc(entities.name)); // Optional: Order by name
    return clientEntities;
  } catch (error) {
    console.error(`Error fetching entities for client ${clientId}:`, error);
    // Consider throwing a more specific error if needed
    throw new Error('Failed to fetch entities for the client.');
  }
}
Verify Implementation:
Ensure the function signature matches the IStorage interface.
Check for any TypeScript errors.
Restart the application.
Retest Functionality:
Action: Repeat the verification step that previously failed: Simulate logging in and viewing the client details page that calls the /api/admin/dashboard or similar route triggering getEntitiesByClient.
Verify: Does the page load without the "storage.getEntitiesByClient is not a function" error? Are the correct entities for the specific client displayed?
Report: Confirm whether the error is resolved and if entities associated with a client can now be fetched and displayed correctly.