Why “Post” fails (400 on /files)
We’re sending JSON, the server expects multipart/form-data.
In uploadPendingFilesToEntry we create a FormData, but when we hand it to apiRequest it’s converted to JSON because the helper doesn’t detect FormData. The backend responds with 400.

Upload happens after we flip status to posted.
If the entry is still draft when files arrive, the server rejects them.

Why “Delete” looks like it does nothing
The DELETE call actually succeeds, but we never invalidate the list query, so React-Query still shows the stale cache.

Quick fixes
1 Teach apiRequest about FormData
ts
Copy
Edit
// client/src/lib/queryClient.ts
export async function apiRequest(
  url: string,
  { method = 'GET', data }: RequestOptions = {}
) {
  const isFormData = data instanceof FormData;   // ← add

  return axios(url, {
    method,
    data,
    headers: isFormData
      ? { 'Content-Type': 'multipart/form-data' }
      : { 'Content-Type': 'application/json' },
    onUploadProgress: (evt) => {
      if (isFormData) console.debug(`Upload progress: ${evt.loaded}/${evt.total}`);
    },
  });
}
2 Upload before we post
ts
Copy
Edit
// client/src/hooks/useJournalEntry.ts
async function postEntry(entry: JournalEntry) {
  // 1️⃣  upload attachments first
  if (entry.pendingFiles?.length) {
    await uploadFiles(entry.id, entry.pendingFiles);
  }

  // 2️⃣  now flip status to "posted"
  return updateJournalEntry(entry.id, { status: 'posted' });
}
(If you prefer to keep the current flow, wrap the status-change in a
try { … } finally { await uploadFiles(); } so a file failure doesn’t block posting.)

3 Invalidate the list after post / delete
ts
Copy
Edit
const queryKey = ['journalEntries', clientId, entityId];

const mutation = useMutation(apiCall, {
  onSuccess: () => {
    queryClient.invalidateQueries(queryKey);   // refresh list
    toast.success('Journal entry updated');
  },
});
Do the same in the deleteEntry mutation.

4 Make the DELETE helper use the hierarchical URL
ts
Copy
Edit
// useJournalEntry.ts
const deleteEntry = (id: number) =>
  apiRequest(`${baseUrl}/${id}`, { method: 'DELETE' });
(and baseUrl is still /api/clients/${clientId}/entities/${entityId}/journal-entries).

After these changes
Posting:

files upload (200)

entry flips to posted (200)

journal-entry list refetches → status chip reads Posted

Deleting:

DELETE 200

list refetches → entry disappears

Give that a try and let me know if any edge-cases remain!