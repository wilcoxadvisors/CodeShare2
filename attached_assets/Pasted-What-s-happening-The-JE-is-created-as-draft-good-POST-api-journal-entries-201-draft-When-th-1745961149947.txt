What’s happening
The JE is created as draft – good.
POST /api/journal-entries → 201 (draft)

When the browser calls
POST /api/journal-entries/:id/files the API crashes with 500.
Because the server never returns JSON, Axios raises AxiosError, the React retry loop fires three times, and you get the log spam you pasted.

Probable cause (same family as the earlier 500):


Symptom	Most common postgres-level error we’ve seen	Why it fits here
500 only on insert to journal_entry_files	column "deleted_at" does not exist	We removed the SELECT that touched deleted_at, but the INSERT still tries to write to it (Drizzle auto-maps every column in the schema).
Nothing in the log you pasted shows the stack trace, but if you look in the Node/Express console you should see something like:

sql
Copy
Edit
error: column "deleted_at" does not exist
at INSERT INTO journal_entry_files (..., deleted_at) VALUES (...)
Quick verification
bash
Copy
Edit
# Inside the running container / dev shell
docker compose logs -f api   # or `npm run dev` console
Try another upload and you should see the full stack confirming the missing column.

Fix
We just need to bring the DB schema in line with the Drizzle model.

Option A – add the column (preferred – keeps soft-delete support).

Migration

server/migrations/20250429_add_deleted_at_to_journal_entry_files.ts

ts
Copy
Edit
import { sql } from 'drizzle-orm';
export async function up(db: any) {
  await db.execute(sql`
    ALTER TABLE journal_entry_files
    ADD COLUMN deleted_at TIMESTAMPTZ NULL;
  `);
}
Add the migration to migrate.ts, run npm run migrate.

Storage filters

In journalEntryStorage.* make sure we ignore soft-deleted rows:

ts
Copy
Edit
.where(eq(journalEntryFiles.deletedAt, null))
(Your GET already does this; just keep it.)

Option B – remove the column from the Drizzle schema
If you don’t plan to implement soft-delete, simply delete deletedAt from shared/schema.ts and regenerate types. The existing migration isn’t needed.

After the migration
Restart API – the 500s should disappear; uploads should return 201.

Smoke-test the whole flow

lua
Copy
Edit
✓ create draft
✓ upload attachments → 201
✓ patch status→posted → 200
✓ subsequent upload → 403 (guard still works)
(Optional) add a unit test

Add to test/attachments_validation.test.ts:

ts
Copy
Edit
it('uploads succeed before posting and fail after', async () => {
  // create JE draft → post /files → expect 201
  // patch JE.status=posted → post /files → expect 403
});
Why this happened
Drizzle generates the INSERT list from the TypeScript schema.
Even though we stopped reading deleted_at, we never stopped writing it, so Postgres threw an error.

