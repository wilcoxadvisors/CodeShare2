Got it — you’re now getting the list, but when you click a row (or hit View) the detail screen mounts with

csharp
Copy
Edit
Route params - clientId: null entityId: null entryId: null
entry at render undefined
That means React-Router is never receiving the :entryId (or the other params).
Nothing is actually wrong with the query or the detail component; the URL that gets pushed is simply missing those path segments.

Why it’s happening
Route tree after our refactor

tsx
Copy
Edit
<Route path="journal-entries" element={<JournalEntriesIndex />}>
  {/* LIST  ── /journal-entries  */}
  <Route path=":entryId" element={<JournalEntryDetail />} />
  {/* NEW   ── /journal-entries/new */}
</Route>
Row click / “View” button is still doing something like

ts
Copy
Edit
navigate(`${entry.id}`)          // <- relative
That used to work when the list lived inside EntityLayout, but now the list is the index route and the new base path is /journal-entries, not
/clients/:clientId/entities/:entityId/journal-entries.

So the navigation resolves to /<currentPath>/<entry.id> (i.e. /journal-entries/123) — no client/entity segments → params are all undefined.

Two-line fix (pick one)
Fix	Where	Code
Absolute path	wherever you call navigate (row click, “View” button)	ts\nnavigate(`/clients/${clientId}/entities/${entityId}/journal-entries/${entry.id}`);\n
Relative but with useParams context
(not my first choice)	wrap the list with <Routes> inside the entity scope again	restore previous hierarchy

Absolute is simpler and keeps the cleaner route tree we just built.

Example patch for the table row
ts
Copy
Edit
// JournalEntriesTable.tsx  (or wherever your <DataTable> lives)
const onRowClick = (entry: JournalEntry) => {
  navigate(
    `/clients/${clientId}/entities/${entityId}/journal-entries/${entry.id}`
  );
};
Example patch for the “New Entry” button (same idea)
ts
Copy
Edit
navigate(
  `/clients/${clientId}/entities/${entityId}/journal-entries/new`
);
(You already compute clientId & entityId from useEntity() inside the list component, so just reuse those.)

Quick smoke-test after the patch
action	expected URL	params in Detail
click a list row (id = 101)	/clients/250/entities/391/journal-entries/101	{ clientId:"250", entityId:"391", entryId:"101" }
click New Entry	/clients/250/entities/391/journal-entries/new	{ clientId:"250", entityId:"391" } in New form

If that works, the detail component will fetch the entry and render normally.