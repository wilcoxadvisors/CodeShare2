Here are explicit, structured **Testing Instructions** covering all scenarios based on your enhanced Chart of Accounts import functionality. Follow these carefully to ensure all edge cases and expected behaviors are verified:

---

## üìù Chart of Accounts Import/Export Testing Procedure

### ‚úÖ **Preparation Steps**

Before testing, make sure:

- The application is running.
- You have several Chart of Accounts (CoA) Excel templates prepared, covering:
  - Simple accounts (minimal required fields)
  - Complex accounts (all fields populated, various hierarchies)
  - Missing, modified, and new accounts scenarios.

---

## üìå **Testing Scenarios**

### **1. Account Additions**

- **Objective:**  
  Verify proper creation of new accounts from imported data.

- **Test Steps:**
  1. Prepare a CoA Excel file with entirely **new account codes**.
  2. Import the file via the UI.
  3. Confirm import preview displays correctly.
  4. Execute import and confirm completion message.

- **Expected Results:**
  - All new accounts appear correctly in CoA after import.
  - No errors shown.

---

### **2. Account Updates**

- **Objective:**  
  Ensure existing accounts can be modified via import.

- **Test Steps:**
  1. Prepare a CoA Excel file with modifications to existing accounts (change `Name`, `Type`, `Subtype`, `ParentCode`, and `Description`).
  2. Import via the UI with `Update Existing Accounts` selected.
  3. Confirm preview correctly identifies account modifications.
  4. Complete the import.

- **Expected Results:**
  - Existing accounts reflect updated data.
  - No duplication or unintended deletion occurs.
  - No unrelated accounts modified.

---

### **3. Account Deactivations**

- **Objective:**  
  Verify missing accounts can be set to inactive correctly.

- **Test Steps:**
  1. Prepare a CoA Excel file omitting some existing accounts.
  2. During import, select option:  
     `Handle Missing Accounts ‚Üí Deactivate`
  3. Preview import‚Äîensure correct accounts identified as "missing."
  4. Complete import.

- **Expected Results:**
  - Accounts not included in import become inactive.
  - No accounts are deleted.
  - UI clearly indicates the inactive status.

---

### **4. Account Deletion Handling**

- **Objective:**  
  Confirm that accounts missing from import can be deleted (if allowed).

- **Test Steps:**
  1. Ensure accounts intended for deletion **have no existing transactions**.
  2. Prepare a CoA file excluding those accounts.
  3. Select option:  
     `Handle Missing Accounts ‚Üí Delete`
  4. Preview clearly lists accounts to be deleted.
  5. Execute import.

- **Expected Results:**
  - Accounts without transactions are deleted.
  - If accounts with transactions are missing, an explicit error message should clearly state they cannot be deleted.

---

### **5. Parent-Child Relationship Validation**

- **Objective:**  
  Ensure robust handling of hierarchical account structures.

- **Test Steps:**  
  **Invalid Parent Relationship**
  1. Import accounts referencing a non-existent parent.
  2. Confirm system clearly shows validation error in preview.

  **Circular and Self-Referencing Accounts**
  1. Test importing accounts where:
     - Account references itself as parent.
     - Accounts referencing each other circularly.
  2. Confirm validation errors appear clearly during preview.

- **Expected Results:**
  - All invalid relationships explicitly identified and rejected.
  - Clear messages stating which relationships failed and why.

---

### **6. Edge Case Scenarios**

- **Objective:**  
  Verify stability and accuracy under extreme or uncommon scenarios.

- **Test Steps:**  
  - **Large Import:**
    1. Prepare Excel file with 100+ accounts.
    2. Confirm successful import without UI freezing/crashing.

  - **Special Characters:**
    1. Import accounts containing special characters (e.g., &, %, ‚Ç¨, accents).
    2. Ensure accounts import without issues.

  - **Concurrent Imports:**
    1. Initiate two simultaneous imports (two browser tabs/windows).
    2. Confirm both imports handled independently without conflict or data integrity loss.

- **Expected Results:**
  - System handles all edge cases gracefully without errors or performance degradation.
  - Imported data accurately reflects source files.

---

### **7. Search Functionality & UI Interaction**

- **Objective:**  
  Verify improvements made to account search and UI controls.

- **Test Steps:**  
  1. Test search functionality with collapsed and expanded states of the account tree.
  2. Search specific accounts (e.g., "Cash").
  3. Test expand/collapse controls for usability.

- **Expected Results:**  
  - Search accurately identifies accounts even when nodes are collapsed.
  - UI clearly shows matched accounts along with necessary parent nodes.
  - Collapse/Expand buttons function reliably and intuitively.

---

### üìã **Test Results Documentation**

For each test scenario above, document clearly:

- **Test description & scenario**
- **Excel/CSV file name** used (include test data)
- **Expected outcome** clearly compared with **Actual outcome**
- **Issues encountered** (including screenshots or detailed error messages)
- **Steps taken** to resolve issues (if applicable)

---

### üö© **What to do if Issues Arise**

- Document issue clearly as above.
- Immediately report detailed scenario to development team for swift resolution.
- Ensure retesting of scenario after fixes.

---

### üõ† **Technical & Backend Checks**

(For Development Team reference)

- After import, review database directly:
  - Confirm accounts correctly updated.
  - Verify active/inactive status accurately matches import settings.
- Check server logs for any backend validation errors or processing messages for transparency.

---

## ‚úÖ **Next Steps After Successful Testing**

- Finalize comprehensive user documentation outlining clearly all scenarios and expected behaviors.
- Provide explicit UI instructions to help users perform imports without confusion.
- Clearly document known limitations or special cases.

---

Let me know if you encounter any issues during these tests or if further refinements are needed.